[project]
name = "mcp-platform"
version = "0.1.0"
description = "Modern MCP Platform with comprehensive protocol support"
authors = [
    {name = "Jack", email = "jack@example.com"}
]
requires-python = ">=3.13"
dependencies = [
    "python-dotenv>=1.1.1",
    "mcp>=1.12.0",
    "PyYAML>=6.0.1",
    "websockets>=12.0.0",
    "fastapi>=0.109.0",
    "uvicorn>=0.27.0",
    "httpx>=0.26.0",
    "anyio>=4.2.0",
    "pydantic>=2.5.3",
    "starlette>=0.34.0",
    "aiosqlite>=0.19.0",
    "ruff>=0.12.5",
    "asyncinotify>=4.2.1",
    "h2>=4.2.0",
    "fastmcp>=2.11.3",
]

[project.scripts]
mcp-platform = "src.main:cli_main"
mcp-reset-config = "src.config:reset_runtime_config_cli"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.2",
    "mypy>=1.8.0",
    "pyright>=1.1.350",
]

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "C4",  # flake8-comprehensions
    "T20", # flake8-print
    "RET", # flake8-return
    "SLF", # flake8-self
    "ARG", # flake8-unused-arguments
    "ERA", # eradicate commented out code
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "E203",   # whitespace before ':' (conflicts with black)
    "SLF001", # allow private member access in this project
    "PLR0912", # too many branches (pragmatic for now)
    "PLR0913", # too many args (pragmatic for now)
    "PLR0915", # too many statements (pragmatic for now)
]

[tool.ruff.lint.per-file-ignores]
"Servers/openrouter_models_server.py" = ["E501", "PLR0912", "PLR0913", "PLR0915"]
"src/history/sqlite_repo.py" = ["E501"]
"Servers/config_server.py" = ["E501"]

[tool.ruff.format]
quote-style = "double"
docstring-code-format = true
line-ending = "lf"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_any_generics = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "pytest-asyncio>=1.1.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]
